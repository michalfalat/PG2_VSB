//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_50
.address_size 64

	// .globl	_Z11primary_rayv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 normal_buffer[1];
.global .align 1 .b8 texcoord_buffer[1];
.global .align 1 .b8 material_index_buffer[1];
.global .align 4 .b8 top_object[4];
.global .align 8 .b8 launch_dim[8];
.global .align 8 .b8 launch_index[8];
.global .align 4 .b8 ray_data[20];
.global .align 8 .b8 barycentrics[8];
.global .align 8 .b8 attribs[24];
.global .align 4 .b8 view_from[12];
.global .align 4 .b8 M_c_w[36];
.global .align 4 .f32 focal_length;
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8ray_dataE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12barycentricsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7attribsE[8] = {82, 97, 121, 0, 24, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9view_fromE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5M_c_wE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12focal_lengthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8ray_dataE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12barycentricsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7attribsE[19] = {84, 114, 105, 97, 110, 103, 108, 101, 65, 116, 116, 114, 105, 98, 117, 116, 101, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9view_fromE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5M_c_wE[17] = {111, 112, 116, 105, 120, 58, 58, 77, 97, 116, 114, 105, 120, 51, 120, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12focal_lengthE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8ray_dataE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12barycentricsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7attribsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9view_fromE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5M_c_wE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12focal_lengthE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8ray_dataE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12barycentricsE[33] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 114, 116, 84, 114, 105, 97, 110, 103, 108, 101, 66, 97, 114, 121, 99, 101, 110, 116, 114, 105, 99, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic7attribsE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 116, 116, 114, 105, 98, 117, 116, 101, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9view_fromE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5M_c_wE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12focal_lengthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8ray_dataE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12barycentricsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7attribsE[22] = {34, 84, 114, 105, 97, 110, 103, 108, 101, 32, 97, 116, 116, 114, 105, 98, 117, 116, 101, 115, 34, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation9view_fromE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5M_c_wE[46] = {34, 99, 97, 109, 101, 114, 97, 32, 116, 111, 32, 119, 111, 114, 108, 100, 32, 115, 112, 97, 99, 101, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 109, 97, 116, 114, 105, 120, 34, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation12focal_lengthE[25] = {34, 102, 111, 99, 97, 108, 32, 108, 101, 110, 103, 116, 104, 32, 105, 110, 32, 112, 105, 120, 101, 108, 115, 34, 0};
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str20[10] = {40, 37, 117, 44, 32, 37, 117, 41, 10, 0};
.global .align 1 .b8 $str21[28] = {69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 40, 37, 100, 44, 32, 37, 100, 41, 10, 0};

.visible .entry _Z11primary_rayv(

)
{
	.local .align 8 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<50>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<23>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u64 	%rd1, [launch_index];
	cvt.u32.u64	%r2, %rd1;
	shr.u64 	%rd2, %rd1, 32;
	cvt.u32.u64	%r1, %rd2;
	mul.wide.u32 	%rd3, %r1, 1374389535;
	shr.u64 	%rd4, %rd3, 37;
	cvt.u32.u64	%r3, %rd4;
	mul.lo.s32 	%r4, %r3, 100;
	sub.s32 	%r5, %r1, %r4;
	or.b32  	%r6, %r2, %r5;
	setp.ne.s32	%p1, %r6, 0;
	@%p1 bra 	BB0_3;

	// inline asm
	call (%r7), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p2, %r7, 0;
	@%p2 bra 	BB0_3;

	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd6, %SPL, 0;
	mov.u32 	%r8, 0;
	st.local.v2.u32 	[%rd6], {%r8, %r1};
	mov.u64 	%rd7, $str20;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r9, [retval0+0];
	
	//{
	}// Callseq End 0

BB0_3:
	ld.global.u32 	%r19, [launch_index];
	cvt.rn.f32.u32	%f9, %r19;
	ld.global.u32 	%r20, [launch_dim];
	cvt.rn.f32.u32	%f10, %r20;
	mul.f32 	%f11, %f10, 0f3F000000;
	sub.f32 	%f12, %f9, %f11;
	mov.u64 	%rd21, output_buffer;
	cvta.global.u64 	%rd13, %rd21;
	mov.u32 	%r17, 2;
	mov.u32 	%r18, 4;
	// inline asm
	call (%rd9, %rd10, %rd11, %rd12), _rt_buffer_get_size_64, (%rd13, %r17, %r18);
	// inline asm
	cvt.rn.f32.u64	%f13, %rd10;
	mul.f32 	%f14, %f13, 0f3F000000;
	ld.global.u32 	%r21, [launch_index+4];
	cvt.rn.f32.u32	%f15, %r21;
	sub.f32 	%f16, %f14, %f15;
	ld.global.f32 	%f17, [focal_length];
	ld.global.f32 	%f18, [M_c_w];
	fma.rn.f32 	%f19, %f18, %f12, 0f00000000;
	ld.global.f32 	%f20, [M_c_w+4];
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	ld.global.f32 	%f22, [M_c_w+8];
	mul.f32 	%f23, %f22, %f17;
	sub.f32 	%f24, %f21, %f23;
	ld.global.f32 	%f25, [M_c_w+12];
	fma.rn.f32 	%f26, %f25, %f12, 0f00000000;
	ld.global.f32 	%f27, [M_c_w+16];
	fma.rn.f32 	%f28, %f27, %f16, %f26;
	ld.global.f32 	%f29, [M_c_w+20];
	mul.f32 	%f30, %f29, %f17;
	sub.f32 	%f31, %f28, %f30;
	ld.global.f32 	%f32, [M_c_w+24];
	fma.rn.f32 	%f33, %f32, %f12, 0f00000000;
	ld.global.f32 	%f34, [M_c_w+28];
	fma.rn.f32 	%f35, %f34, %f16, %f33;
	ld.global.f32 	%f36, [M_c_w+32];
	mul.f32 	%f37, %f36, %f17;
	sub.f32 	%f38, %f35, %f37;
	mul.f32 	%f39, %f31, %f31;
	fma.rn.f32 	%f40, %f24, %f24, %f39;
	fma.rn.f32 	%f41, %f38, %f38, %f40;
	sqrt.rn.f32 	%f42, %f41;
	rcp.rn.f32 	%f43, %f42;
	mul.f32 	%f4, %f24, %f43;
	mul.f32 	%f5, %f31, %f43;
	mul.f32 	%f6, %f38, %f43;
	ld.global.f32 	%f3, [view_from+8];
	ld.global.f32 	%f2, [view_from+4];
	ld.global.f32 	%f1, [view_from];
	ld.global.u32 	%r12, [top_object];
	mov.u32 	%r14, 255;
	mov.u32 	%r15, 0;
	mov.u32 	%r16, 20;
	mov.f32 	%f7, 0f3C23D70A;
	mov.f32 	%f8, 0f6C4ECB8F;
	add.u64 	%rd14, %SP, 8;
	// inline asm
	call _rt_trace_mask_flags_64, (%r12, %f1, %f2, %f3, %f4, %f5, %f6, %r15, %f7, %f8, %r14, %r15, %rd14, %r16);
	// inline asm
	ld.global.v2.u32 	{%r22, %r23}, [launch_index];
	cvt.u64.u32	%rd17, %r22;
	cvt.u64.u32	%rd18, %r23;
	mov.u64 	%rd20, 0;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd13, %r17, %r18, %rd17, %rd18, %rd20, %rd20);
	// inline asm
	add.u64 	%rd22, %SPL, 8;
	ld.local.f32 	%f44, [%rd22];
	mul.f32 	%f45, %f44, 0f437F0000;
	cvt.rzi.u32.f32	%r26, %f45;
	ld.local.f32 	%f46, [%rd22+4];
	mul.f32 	%f47, %f46, 0f437F0000;
	cvt.rzi.u32.f32	%r27, %f47;
	ld.local.f32 	%f48, [%rd22+8];
	mul.f32 	%f49, %f48, 0f437F0000;
	cvt.rzi.u32.f32	%r28, %f49;
	cvt.u16.u32	%rs1, %r28;
	cvt.u16.u32	%rs2, %r27;
	cvt.u16.u32	%rs3, %r26;
	mov.u16 	%rs4, 255;
	st.v4.u8 	[%rd15], {%rs3, %rs2, %rs1, %rs4};
	ret;
}

	// .globl	_Z11closest_hitv
.visible .entry _Z11closest_hitv(

)
{
	.reg .f32 	%f<37>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<20>;


	// inline asm
	call (%r1), _rt_get_primitive_index, ();
	// inline asm
	mul.lo.s32 	%r8, %r1, 3;
	cvt.u64.u32	%rd3, %r8;
	mov.u64 	%rd19, normal_buffer;
	cvta.global.u64 	%rd2, %rd19;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 12;
	mov.u64 	%rd18, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r6, %r7, %rd3, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f1, [%rd1+8];
	ld.f32 	%f2, [%rd1+4];
	ld.f32 	%f3, [%rd1];
	add.s32 	%r9, %r8, 1;
	cvt.u64.u32	%rd9, %r9;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd2, %r6, %r7, %rd9, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f4, [%rd7+8];
	ld.f32 	%f5, [%rd7+4];
	ld.f32 	%f6, [%rd7];
	add.s32 	%r10, %r8, 2;
	cvt.u64.u32	%rd15, %r10;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd2, %r6, %r7, %rd15, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f7, [%rd13+8];
	ld.f32 	%f8, [%rd13+4];
	ld.f32 	%f9, [%rd13];
	ld.global.v2.f32 	{%f10, %f11}, [barycentrics];
	mul.f32 	%f14, %f9, %f11;
	mul.f32 	%f15, %f8, %f11;
	mul.f32 	%f16, %f7, %f11;
	fma.rn.f32 	%f17, %f6, %f10, %f14;
	fma.rn.f32 	%f18, %f5, %f10, %f15;
	fma.rn.f32 	%f19, %f4, %f10, %f16;
	mov.f32 	%f20, 0f3F800000;
	sub.f32 	%f21, %f20, %f10;
	sub.f32 	%f22, %f21, %f11;
	fma.rn.f32 	%f23, %f3, %f22, %f17;
	fma.rn.f32 	%f24, %f2, %f22, %f18;
	fma.rn.f32 	%f25, %f1, %f22, %f19;
	mul.f32 	%f26, %f24, %f24;
	fma.rn.f32 	%f27, %f23, %f23, %f26;
	fma.rn.f32 	%f28, %f25, %f25, %f27;
	sqrt.rn.f32 	%f29, %f28;
	rcp.rn.f32 	%f30, %f29;
	fma.rn.f32 	%f31, %f30, %f23, 0f3F800000;
	mul.f32 	%f32, %f31, 0f3F000000;
	fma.rn.f32 	%f33, %f30, %f24, 0f3F800000;
	mul.f32 	%f34, %f33, 0f3F000000;
	fma.rn.f32 	%f35, %f30, %f25, 0f3F800000;
	mul.f32 	%f36, %f35, 0f3F000000;
	st.global.f32 	[ray_data], %f32;
	st.global.f32 	[ray_data+4], %f34;
	st.global.f32 	[ray_data+8], %f36;
	ret;
}

	// .globl	_Z12miss_programv
.visible .entry _Z12miss_programv(

)
{
	.reg .b32 	%r<3>;


	mov.u32 	%r1, 1065353216;
	st.global.u32 	[ray_data+8], %r1;
	mov.u32 	%r2, 0;
	st.global.u32 	[ray_data+4], %r2;
	st.global.u32 	[ray_data], %r2;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 16 .b8 	__local_depot3[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<44>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<132>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<127>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd28, %SP, 384;
	add.u64 	%rd29, %SPL, 384;
	// inline asm
	call (%r78), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r80, %r81}, [launch_index];
	// inline asm
	call (%r79), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r79, 0;
	add.s64 	%rd1, %rd29, 4;
	@%p1 bra 	BB3_2;

	st.local.u32 	[%rd29], %r78;
	st.local.u32 	[%rd1], %r80;
	st.local.u32 	[%rd1+4], %r81;
	mov.u64 	%rd32, $str21;
	cvta.global.u64 	%rd33, %rd32;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r82, [retval0+0];
	
	//{
	}// Callseq End 1

BB3_2:
	// inline asm
	call (%r83), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p2, %r83, 1020;
	@%p2 bra 	BB3_63;
	bra.uni 	BB3_3;

BB3_63:
	ld.volatile.global.u32 	%r75, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r76, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r77, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r123), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p43, %r123, 0;
	@%p43 bra 	BB3_65;

	st.local.u32 	[%rd29], %r75;
	st.local.u32 	[%rd1], %r76;
	st.local.u32 	[%rd1+4], %r77;
	mov.u64 	%rd116, $str;
	cvta.global.u64 	%rd117, %rd116;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd117;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r124, [retval0+0];
	
	//{
	}// Callseq End 20
	bra.uni 	BB3_65;

BB3_3:
	setp.eq.s32	%p3, %r83, 1005;
	@%p3 bra 	BB3_61;
	bra.uni 	BB3_4;

BB3_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r121), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r121, 0;
	@%p42 bra 	BB3_65;

	st.local.u32 	[%rd29], %r72;
	st.local.u32 	[%rd1], %r73;
	st.local.u32 	[%rd1+4], %r74;
	mov.u64 	%rd112, $str1;
	cvta.global.u64 	%rd113, %rd112;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r122, [retval0+0];
	
	//{
	}// Callseq End 19
	bra.uni 	BB3_65;

BB3_4:
	setp.eq.s32	%p4, %r83, 1021;
	@%p4 bra 	BB3_55;
	bra.uni 	BB3_5;

BB3_55:
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd20, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd126, 1;
	setp.lt.u32	%p39, %r66, 2;
	mov.u64 	%rd125, %rd126;
	@%p39 bra 	BB3_57;

	ld.volatile.global.u64 	%rd125, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB3_57:
	setp.lt.u32	%p40, %r66, 3;
	@%p40 bra 	BB3_59;

	ld.volatile.global.u64 	%rd126, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB3_59:
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd27, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r119), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r119, 0;
	@%p41 bra 	BB3_65;

	add.u64 	%rd106, %SP, 296;
	add.u64 	%rd107, %SPL, 296;
	st.local.v2.u32 	[%rd107], {%r67, %r68};
	st.local.v2.u32 	[%rd107+8], {%r69, %r66};
	st.local.u32 	[%rd107+24], %r70;
	st.local.u32 	[%rd107+56], %r71;
	st.local.u64 	[%rd107+16], %rd19;
	st.local.u64 	[%rd107+32], %rd20;
	st.local.u64 	[%rd107+40], %rd125;
	st.local.u64 	[%rd107+48], %rd126;
	st.local.u64 	[%rd107+64], %rd25;
	st.local.u64 	[%rd107+72], %rd26;
	st.local.u64 	[%rd107+80], %rd27;
	mov.u64 	%rd108, $str2;
	cvta.global.u64 	%rd109, %rd108;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd106;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r120, [retval0+0];
	
	//{
	}// Callseq End 18

BB3_65:
	ld.global.v2.u32 	{%r127, %r128}, [launch_index];
	cvt.u64.u32	%rd120, %r127;
	cvt.u64.u32	%rd121, %r128;
	mov.u64 	%rd124, output_buffer;
	cvta.global.u64 	%rd119, %rd124;
	mov.u32 	%r125, 2;
	mov.u32 	%r126, 4;
	mov.u64 	%rd123, 0;
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd119, %r125, %r126, %rd120, %rd121, %rd123, %rd123);
	// inline asm
	mov.u16 	%rs1, 0;
	mov.u16 	%rs2, 255;
	st.v4.u8 	[%rd118], {%rs2, %rs1, %rs2, %rs1};
	ret;

BB3_5:
	setp.eq.s32	%p5, %r83, 1006;
	add.u64 	%rd34, %SP, 272;
	add.u64 	%rd35, %SPL, 272;
	add.s64 	%rd2, %rd35, 4;
	@%p5 bra 	BB3_46;
	bra.uni 	BB3_6;

BB3_46:
	ld.volatile.global.u32 	%r112, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p33, %r112, 1;
	@%p33 bra 	BB3_53;

	setp.eq.s32	%p34, %r112, 2;
	@%p34 bra 	BB3_51;
	bra.uni 	BB3_48;

BB3_51:
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r115), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r115, 0;
	@%p37 bra 	BB3_65;

	st.local.u32 	[%rd35], %r59;
	st.local.u32 	[%rd2], %r60;
	st.local.v2.u32 	[%rd2+4], {%r61, %r62};
	st.local.u64 	[%rd2+12], %rd17;
	mov.u64 	%rd98, $str4;
	cvta.global.u64 	%rd99, %rd98;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd99;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB3_65;

BB3_6:
	setp.eq.s32	%p6, %r83, 1007;
	add.u64 	%rd36, %SP, 256;
	add.u64 	%rd37, %SPL, 256;
	add.s64 	%rd3, %rd37, 4;
	@%p6 bra 	BB3_37;
	bra.uni 	BB3_7;

BB3_37:
	ld.volatile.global.u32 	%r105, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p27, %r105, 1;
	@%p27 bra 	BB3_44;

	setp.eq.s32	%p28, %r105, 2;
	@%p28 bra 	BB3_42;
	bra.uni 	BB3_39;

BB3_42:
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r108), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r108, 0;
	@%p31 bra 	BB3_65;

	st.local.u32 	[%rd37], %r48;
	st.local.u32 	[%rd3], %r49;
	st.local.v2.u32 	[%rd3+4], {%r50, %r51};
	mov.u64 	%rd86, $str7;
	cvta.global.u64 	%rd87, %rd86;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r109, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB3_65;

BB3_7:
	setp.eq.s32	%p7, %r83, 1018;
	@%p7 bra 	BB3_28;
	bra.uni 	BB3_8;

BB3_28:
	ld.volatile.global.u32 	%r98, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p21, %r98, 1;
	@%p21 bra 	BB3_35;

	setp.eq.s32	%p22, %r98, 2;
	@%p22 bra 	BB3_33;
	bra.uni 	BB3_30;

BB3_33:
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r101), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r101, 0;
	@%p25 bra 	BB3_65;

	mov.u64 	%rd70, $str11;
	cvta.global.u64 	%rd71, %rd70;
	add.u64 	%rd72, %SP, 224;
	add.u64 	%rd73, %SPL, 224;
	st.local.u64 	[%rd73], %rd71;
	st.local.u64 	[%rd73+24], %rd14;
	st.local.v2.u32 	[%rd73+8], {%r38, %r39};
	st.local.v2.u32 	[%rd73+16], {%r40, %r41};
	mov.u64 	%rd74, $str10;
	cvta.global.u64 	%rd75, %rd74;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd75;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd72;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r102, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB3_65;

BB3_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r117), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p38, %r117, 0;
	@%p38 bra 	BB3_65;

	st.local.u32 	[%rd35], %r63;
	st.local.u32 	[%rd2], %r64;
	st.local.u32 	[%rd2+4], %r65;
	st.local.u64 	[%rd2+12], %rd18;
	mov.u64 	%rd102, $str3;
	cvta.global.u64 	%rd103, %rd102;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd103;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r118, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB3_65;

BB3_48:
	setp.ne.s32	%p35, %r112, 3;
	@%p35 bra 	BB3_65;

	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r113), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r113, 0;
	@%p36 bra 	BB3_65;

	st.local.u32 	[%rd35], %r55;
	st.local.u32 	[%rd2], %r56;
	st.local.v2.u32 	[%rd2+4], {%r57, %r58};
	st.local.u64 	[%rd2+12], %rd16;
	mov.u64 	%rd94, $str5;
	cvta.global.u64 	%rd95, %rd94;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd95;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r114, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB3_65;

BB3_8:
	setp.eq.s32	%p8, %r83, 1019;
	@%p8 bra 	BB3_26;
	bra.uni 	BB3_9;

BB3_26:
	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r96), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p20, %r96, 0;
	@%p20 bra 	BB3_65;

	add.u64 	%rd62, %SP, 176;
	add.u64 	%rd63, %SPL, 176;
	st.local.v2.u32 	[%rd63], {%r31, %r32};
	st.local.u32 	[%rd63+8], %r33;
	st.local.u64 	[%rd63+16], %rd10;
	st.local.u64 	[%rd63+24], %rd11;
	st.local.u64 	[%rd63+32], %rd12;
	mov.u64 	%rd64, $str13;
	cvta.global.u64 	%rd65, %rd64;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd65;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd62;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r97, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB3_65;

BB3_44:
	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r110), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p32, %r110, 0;
	@%p32 bra 	BB3_65;

	st.local.u32 	[%rd29], %r52;
	st.local.u32 	[%rd1], %r53;
	st.local.u32 	[%rd1+4], %r54;
	mov.u64 	%rd90, $str6;
	cvta.global.u64 	%rd91, %rd90;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd91;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r111, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB3_65;

BB3_39:
	setp.ne.s32	%p29, %r105, 3;
	@%p29 bra 	BB3_65;

	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r106), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r106, 0;
	@%p30 bra 	BB3_65;

	st.local.u32 	[%rd29], %r45;
	st.local.u32 	[%rd1], %r46;
	st.local.u32 	[%rd1+4], %r47;
	mov.u64 	%rd82, $str8;
	cvta.global.u64 	%rd83, %rd82;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd83;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r107, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB3_65;

BB3_9:
	setp.eq.s32	%p9, %r83, 1022;
	@%p9 bra 	BB3_24;
	bra.uni 	BB3_10;

BB3_24:
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r94), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r94, 0;
	@%p19 bra 	BB3_65;

	mov.b32 	 %f1, %r22;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r23;
	cvt.f64.f32	%fd2, %f2;
	mov.b32 	 %f3, %r24;
	cvt.f64.f32	%fd3, %f3;
	mov.b32 	 %f4, %r25;
	cvt.f64.f32	%fd4, %f4;
	mov.b32 	 %f5, %r26;
	cvt.f64.f32	%fd5, %f5;
	mov.b32 	 %f6, %r27;
	cvt.f64.f32	%fd6, %f6;
	mov.b32 	 %f7, %r29;
	cvt.f64.f32	%fd7, %f7;
	mov.b32 	 %f8, %r30;
	cvt.f64.f32	%fd8, %f8;
	add.u64 	%rd58, %SP, 80;
	add.u64 	%rd59, %SPL, 80;
	st.local.v2.u32 	[%rd59], {%r19, %r20};
	st.local.u32 	[%rd59+8], %r21;
	st.local.u32 	[%rd59+72], %r28;
	st.local.u64 	[%rd59+16], %rd9;
	st.local.f64 	[%rd59+24], %fd1;
	st.local.f64 	[%rd59+32], %fd2;
	st.local.f64 	[%rd59+40], %fd3;
	st.local.f64 	[%rd59+48], %fd4;
	st.local.f64 	[%rd59+56], %fd5;
	st.local.f64 	[%rd59+64], %fd6;
	st.local.f64 	[%rd59+80], %fd7;
	st.local.f64 	[%rd59+88], %fd8;
	mov.u64 	%rd60, $str14;
	cvta.global.u64 	%rd61, %rd60;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd61;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r95, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB3_65;

BB3_35:
	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r103), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p26, %r103, 0;
	@%p26 bra 	BB3_65;

	st.local.u32 	[%rd35], %r42;
	st.local.u32 	[%rd2], %r43;
	st.local.u32 	[%rd2+4], %r44;
	st.local.u64 	[%rd2+12], %rd15;
	mov.u64 	%rd78, $str9;
	cvta.global.u64 	%rd79, %rd78;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd79;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r104, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB3_65;

BB3_30:
	setp.ne.s32	%p23, %r98, 3;
	@%p23 bra 	BB3_65;

	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r99), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r99, 0;
	@%p24 bra 	BB3_65;

	st.local.u32 	[%rd35], %r34;
	st.local.u32 	[%rd2], %r35;
	st.local.v2.u32 	[%rd2+4], {%r36, %r37};
	st.local.u64 	[%rd2+12], %rd13;
	mov.u64 	%rd68, $str12;
	cvta.global.u64 	%rd69, %rd68;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd69;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r100, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB3_65;

BB3_10:
	setp.eq.s32	%p10, %r83, 1003;
	@%p10 bra 	BB3_22;
	bra.uni 	BB3_11;

BB3_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// inline asm
	call (%r92), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r92, 0;
	@%p18 bra 	BB3_65;

	add.u64 	%rd54, %SP, 32;
	add.u64 	%rd55, %SPL, 32;
	st.local.v2.u32 	[%rd55], {%r16, %r17};
	st.local.u32 	[%rd55+8], %r18;
	st.local.u64 	[%rd55+16], %rd5;
	st.local.u64 	[%rd55+24], %rd6;
	st.local.u64 	[%rd55+32], %rd7;
	st.local.u64 	[%rd55+40], %rd8;
	mov.u64 	%rd56, $str15;
	cvta.global.u64 	%rd57, %rd56;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd57;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r93, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB3_65;

BB3_11:
	setp.eq.s32	%p11, %r83, 1004;
	@%p11 bra 	BB3_20;
	bra.uni 	BB3_12;

BB3_20:
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r90), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r90, 0;
	@%p17 bra 	BB3_65;

	add.u64 	%rd50, %SP, 0;
	add.u64 	%rd51, %SPL, 0;
	st.local.v2.u32 	[%rd51], {%r12, %r13};
	st.local.u32 	[%rd51+8], %r14;
	st.local.u32 	[%rd51+24], %r15;
	st.local.u64 	[%rd51+16], %rd4;
	mov.u64 	%rd52, $str16;
	cvta.global.u64 	%rd53, %rd52;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd53;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r91, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB3_65;

BB3_12:
	add.s32 	%r5, %r83, -1024;
	setp.lt.u32	%p12, %r5, 64512;
	@%p12 bra 	BB3_18;
	bra.uni 	BB3_13;

BB3_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r88), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r88, 0;
	@%p16 bra 	BB3_65;

	add.s32 	%r131, %r83, -1024;
	st.local.u32 	[%rd37], %r131;
	st.local.u32 	[%rd3], %r9;
	st.local.v2.u32 	[%rd3+4], {%r10, %r11};
	mov.u64 	%rd48, $str17;
	cvta.global.u64 	%rd49, %rd48;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB3_65;

BB3_13:
	setp.eq.s32	%p13, %r83, 1023;
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p13 bra 	BB3_16;
	bra.uni 	BB3_14;

BB3_16:
	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r86, 0;
	@%p15 bra 	BB3_65;

	st.local.u32 	[%rd29], %r6;
	st.local.u32 	[%rd1], %r7;
	st.local.u32 	[%rd1+4], %r8;
	mov.u64 	%rd44, $str18;
	cvta.global.u64 	%rd45, %rd44;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB3_65;

BB3_14:
	// inline asm
	call (%r84), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r84, 0;
	@%p14 bra 	BB3_65;

	st.local.u32 	[%rd29], %r6;
	st.local.u32 	[%rd1], %r7;
	st.local.u32 	[%rd1+4], %r8;
	mov.u64 	%rd40, $str19;
	cvta.global.u64 	%rd41, %rd40;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB3_65;
}


